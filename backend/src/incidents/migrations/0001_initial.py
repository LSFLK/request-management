# Generated by Django 2.2.12 on 2020-05-17 15:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import src.incidents.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CannedResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('message', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refId', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('language', models.CharField(choices=[('SINHALA', 'Sinhala'), ('TAMIL', 'Tamil'), ('ENGLISH', 'English')], default=src.incidents.models.LanguageType('English'), max_length=10)),
                ('occurrence', models.CharField(blank=True, choices=[('OCCURRED', 'Occurred'), ('OCCURRING', 'Occurring'), ('WILL_OCCUR', 'Will Occur')], max_length=50, null=True)),
                ('incidentType', models.CharField(choices=[('INQUIRY', 'Inquiry'), ('COMPLAINT', 'Complaint')], default=src.incidents.models.IncidentType('Complaint'), max_length=50)),
                ('infoChannel', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('coordinates', models.CharField(blank=True, max_length=200, null=True)),
                ('province', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('ds_division', models.CharField(blank=True, max_length=200, null=True)),
                ('grama_niladhari', models.CharField(blank=True, max_length=200, null=True)),
                ('complainer_consent', models.BooleanField(blank=True, default=False, null=True)),
                ('proof', models.BooleanField(default=False, null=True)),
                ('response_time', models.IntegerField(default=12)),
                ('current_status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('current_severity', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default=src.incidents.models.SeverityType('Low'), max_length=50)),
                ('institution', models.CharField(blank=True, max_length=200, null=True)),
                ('current_decision', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('occured_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='incident_asignees', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('linked_individuals', models.ManyToManyField(blank=True, related_name='incident_linked_individuals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_date',),
                'permissions': (('CAN_REVIEW_INCIDENTS', 'Can review created incidents'), ('CAN_REVIEW_OWN_INCIDENTS', 'Can review own incidents'), ('CAN_REVIEW_ALL_INCIDENTS', 'Can review all incidents'), ('CAN_MANAGE_INCIDENT', 'Can manage incident'), ('CAN_RUN_WORKFLOW', 'Can run incident workflows'), ('CAN_CHANGE_ASSIGNEE', 'Can change incident assignee'), ('CAN_VERIFY_INCIDENT', 'Can verify incident'), ('CAN_CLOSE_INCIDENT', 'Can close incident'), ('CAN_ESCALATE_INCIDENT', 'Can escalate incident'), ('CAN_ESCALATE_EXTERNAL', 'Can refer incident to external organization'), ('CAN_INVALIDATE_INCIDENT', 'Can invalidate incident'), ('CAN_REOPEN_INCIDENT', 'Can reopen incident'), ('CAN_ACTION_OVER_CURRENT_ASSIGNEE', 'Can action over current assignee'), ('CAN_VIEW_REPORTS', 'Can view inciddent reports')),
            },
        ),
        migrations.CreateModel(
            name='IncidentPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('political_affliation', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncidentVehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle_no', models.CharField(blank=True, max_length=15, null=True)),
                ('ownership', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, choices=[('MR', 'Mr'), ('MRS', 'Mrs'), ('MS', 'Ms'), ('MISS', 'Miss'), ('DR', 'Dr'), ('PROFESSOR', 'Professor')], max_length=10, null=True)),
                ('nic', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('sn_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tm_name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('telephone', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('gn_division', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Reporter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, choices=[('MR', 'Mr'), ('MRS', 'Mrs'), ('MS', 'Ms'), ('MISS', 'Miss'), ('DR', 'Dr'), ('PROFESSOR', 'Professor')], max_length=10, null=True)),
                ('nic', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('sn_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tm_name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('telephone', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('gn_division', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='VerifyWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('has_proof', models.BooleanField(default=False)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_verifyworkflow_related', related_query_name='incidents_verifyworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_verifyworkflow_related', related_query_name='incidents_verifyworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SendCannedResponseWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_sendcannedresponseworkflow_related', related_query_name='incidents_sendcannedresponseworkflows', to=settings.AUTH_USER_MODEL)),
                ('canned_response', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.CannedResponse')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_sendcannedresponseworkflow_related', related_query_name='incidents_sendcannedresponseworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestInformationWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('is_information_provided', models.BooleanField(default=False)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_requestinformationworkflow_related', related_query_name='incidents_requestinformationworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_requestinformationworkflow_related', related_query_name='incidents_requestinformationworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReopenWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_reopenworkflow_related', related_query_name='incidents_reopenworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_reopenworkflow_related', related_query_name='incidents_reopenworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProvideInformationWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_provideinformationworkflow_related', related_query_name='incidents_provideinformationworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_provideinformationworkflow_related', related_query_name='incidents_provideinformationworkflows', to='incidents.Incident')),
                ('initiated_workflow', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.RequestInformationWorkflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvalidateWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('response_time', models.CharField(blank=True, max_length=200, null=True)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_invalidateworkflow_related', related_query_name='incidents_invalidateworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_invalidateworkflow_related', related_query_name='incidents_invalidateworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IncidentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(blank=True, choices=[('NEW', 'New'), ('CLOSED', 'Closed'), ('ACTION_TAKEN', 'Action Taken'), ('ACTION_PENDING', 'Action Pending'), ('INFORMATION_PROVIDED', 'Information Provided'), ('INFORMATION_REQUESTED', 'Information Requested'), ('VERIFIED', 'Verified'), ('INVALIDATED', 'Invalidated'), ('REOPENED', 'Reopened')], max_length=50, null=True)),
                ('current_status', models.CharField(choices=[('NEW', 'New'), ('CLOSED', 'Closed'), ('ACTION_TAKEN', 'Action Taken'), ('ACTION_PENDING', 'Action Pending'), ('INFORMATION_PROVIDED', 'Information Provided'), ('INFORMATION_REQUESTED', 'Information Requested'), ('VERIFIED', 'Verified'), ('INVALIDATED', 'Invalidated'), ('REOPENED', 'Reopened')], max_length=50)),
                ('approved', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.Incident')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='IncidentPoliceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nature_of_incident', models.CharField(blank=True, max_length=200, null=True)),
                ('complainers_name', models.CharField(blank=True, max_length=200, null=True)),
                ('complainers_address', models.CharField(blank=True, max_length=200, null=True)),
                ('victims_name', models.CharField(blank=True, max_length=200, null=True)),
                ('victims_address', models.CharField(blank=True, max_length=200, null=True)),
                ('respondents_name', models.CharField(blank=True, max_length=200, null=True)),
                ('respondents_address', models.CharField(blank=True, max_length=200, null=True)),
                ('no_of_vehicles_arrested', models.IntegerField(blank=True, default=0, null=True)),
                ('steps_taken', models.CharField(blank=True, max_length=200, null=True)),
                ('court_case_no', models.CharField(blank=True, max_length=200, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('detained_vehicles', models.ManyToManyField(blank=True, related_name='incident_detained_vehicles', to='incidents.IncidentVehicle')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.Incident')),
                ('injured_parties', models.ManyToManyField(blank=True, related_name='incident_injured_parties', to='incidents.IncidentPerson')),
                ('respondents', models.ManyToManyField(blank=True, related_name='incident_respondents', to='incidents.IncidentPerson')),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='IncidentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_outcome', models.BooleanField(default=False)),
                ('sn_body', models.CharField(blank=True, max_length=200)),
                ('tm_body', models.CharField(blank=True, max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.Incident')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='incident',
            name='recipient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.Recipient'),
        ),
        migrations.AddField(
            model_name='incident',
            name='reporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.Reporter'),
        ),
        migrations.CreateModel(
            name='EscalateWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('response_time', models.CharField(blank=True, max_length=200, null=True)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_escalateworkflow_related', related_query_name='incidents_escalateworkflows', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='escalation_assignee_related', related_query_name='escalation_assigned_users', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_escalateworkflow_related', related_query_name='incidents_escalateworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EscalateExternalWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_internal_user', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('escalated_user_other', models.CharField(blank=True, max_length=200, null=True)),
                ('escalated_entity_other', models.CharField(blank=True, max_length=200, null=True)),
                ('is_action_completed', models.BooleanField(default=False)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_escalateexternalworkflow_related', related_query_name='incidents_escalateexternalworkflows', to=settings.AUTH_USER_MODEL)),
                ('escalated_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='escalation_related', related_query_name='escalated_users', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_escalateexternalworkflow_related', related_query_name='incidents_escalateexternalworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompleteActionWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_completeactionworkflow_related', related_query_name='incidents_completeactionworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_completeactionworkflow_related', related_query_name='incidents_completeactionworkflows', to='incidents.Incident')),
                ('initiated_workflow', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidents.EscalateExternalWorkflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CloseWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('assignees', models.TextField()),
                ('entities', models.TextField()),
                ('departments', models.TextField()),
                ('individuals', models.TextField()),
                ('comment', models.TextField()),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_closeworkflow_related', related_query_name='incidents_closeworkflows', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_closeworkflow_related', related_query_name='incidents_closeworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssignUserWorkflow',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('actioned_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_assignuserworkflow_related', related_query_name='incidents_assignuserworkflows', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignee_related', related_query_name='assigned_users', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents_assignuserworkflow_related', related_query_name='incidents_assignuserworkflows', to='incidents.Incident')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
